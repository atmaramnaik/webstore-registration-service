group = "atmaram"
buildscript {
	repositories {
		mavenCentral()
	}
	dependencies{
		classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.9.RELEASE")
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'
apply plugin: 'io.spring.dependency-management'
repositories {
	mavenCentral()
}
jar {
	baseName = 'webstore-registration'
	version = '0.0.1'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
	compile("org.springframework.boot:spring-boot-starter-web")
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile("org.springframework.boot:spring-boot-starter-actuator")
	compile group: 'org.modelmapper', name: 'modelmapper', version: '1.1.2'
	compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.16'
	compile 'org.springframework.boot:spring-boot-starter-security'
	compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.2'
	compile group: 'org.flywaydb', name: 'flyway-core', version: '+'
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
	testCompile group: 'junit', name: 'junit'

}
test {
	dependsOn 'cleanTest'
	useJUnit {
		include 'registration/'
	}
	beforeTest { descriptor ->
		logger.lifecycle("Running test: " + descriptor)
	}
}
task buildDocker(type: Docker, dependsOn: build) {
	push = false
	applicationName = jar.baseName
	tag="${project.group}/${applicationName}"
	tagVersion="v0.0.1"
	dockerfile = file('src/main/docker/Dockerfile')
	doFirst {
		copy {
			from jar
			into stageDir
		}
	}
}
task buildAndPushDocker(type: Docker, dependsOn: build) {
	push = true
	applicationName = jar.baseName
	tag="${project.group}/${applicationName}"
	tagVersion="v0.0.1"
	dockerfile = file('src/main/docker/Dockerfile')
	doFirst {
		copy {
			from jar
			into stageDir
		}
	}
}